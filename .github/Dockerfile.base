# syntax = docker/dockerfile:1.2

# call this from rails root: podman build -t mapforge-base -f .github/Dockerfile.base .

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version and Gemfile
ARG RUBY_VERSION=3.4.5
FROM registry.docker.com/library/ruby:$RUBY_VERSION-slim as base

LABEL org.opencontainers.image.source="https://github.com/mapforge-org/mapforge"
LABEL org.opencontainers.image.licenses="MIT"

# Throw-away build stage to reduce size of final image
FROM base as os-dependencies
LABEL org.opencontainers.image.description="OS container for Mapforge"
ENV DEBIAN_FRONTEND=noninteractive

# No need to disable man-db, it's not installed in Ruby slim images
# Install packages needed to build gems & deployment
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y libyaml-dev ruby-dev build-essential \
    git npm libvips pkg-config libproj-dev proj-bin libimlib2-dev \
    libjemalloc2 vim less curl iputils-ping libsqlite3-0 libvips proj-bin wget gnupg \
    ca-certificates imagemagick libimlib2 fonts-noto-color-emoji && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Install chrome for webdriver tests & screenshots (adds 400MB :-o)
# Add Google's public key + repo
RUN wget -q -O /usr/share/keyrings/google-linux-signing-keyring.gpg https://dl-ssl.google.com/linux/linux_signing_key.pub && \
    echo "deb [signed-by=/usr/share/keyrings/google-linux-signing-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list && \
    # Update package lists again and install Google Chrome
    apt-get update -qq && apt-get install --no-install-recommends -y google-chrome-stable && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives


# Stage to install gems, npm packages and build assets
FROM os-dependencies as app-dependencies
LABEL org.opencontainers.image.description="Dependencies container for Mapforge"

# Rails app lives here
WORKDIR /rails

# Set production environment
ENV RAILS_ENV="production" \
    BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development"

# Install application gems
COPY Gemfile Gemfile.lock ./
RUN bundle install && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git && \
    bundle exec bootsnap precompile --gemfile

# Install JavaScript dependencies
COPY package.json package-lock.json ./
RUN npm install

# Copy application code
COPY . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/

# Precompiling assets for production without requiring secret RAILS_MASTER_KEY
RUN SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile
